rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can fully manage their own user document and likes subcollection.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /likes/{componentId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Rules for community components.
    match /community_components/{componentId} {
      // Allow everyone to read components.
      allow read: if true;

      // Allow authenticated users to create new components.
      allow create: if request.auth != null;

      // Allow authenticated users to update only the 'likes' and 'copies' fields.
      // This is the key rule that allows the 'like' transaction to succeed.
      allow update: if request.auth != null
                    && request.resource.data.keys().hasAll(['name', 'description', 'prompt', 'code', 'framework', 'category', 'previewHtml', 'authorId', 'authorName', 'authorImage', 'likes', 'copies', 'createdAt'])
                    && (request.resource.data.likes == resource.data.likes + 1 || request.resource.data.likes == resource.data.likes - 1)
                    && request.resource.data.copies == resource.data.copies;

      // A separate rule just for the copy action, which is simpler.
      allow update: if request.auth != null
                    && request.resource.data.copies == resource.data.copies + 1
                    && request.resource.data.likes == resource.data.likes;
    }
  }
}
